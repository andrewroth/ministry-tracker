<%- throw "people/_address partial needs a 'address_type' local one of :permanent, :current" if local_assigns[:address_type].nil? || ![:permanent, :current].include?(address_type) -%>
<%- prefix = (address_type == :permanent ? 'perm' : 'current') -%>
<%- long_prefix = (address_type == :permanent ? 'permanent' : 'current') -%>
<%- spinner = (address_type == :permanent ? 'spinnerp' : 'spinnera') if local_assigns[:spinner].nil? -%>
<table class="halftab">
	<tr>
    <th><%= t('profile.headings.phone') %></th>
		<td><%= text_field :"#{prefix}_address", :phone %></td>
	</tr>
  <%- if address_type == :current %>
	<tr>
		<th><%= t('profile.headings.alt_phone') %></th>
		<td><%= text_field :"#{prefix}_address", :alternate_phone %></td>
	</tr>
  <%- end -%>
	<tr>
  <th><%= t('profile.headings.address') %><% if @use_address2 %> 1:<% end %></th>
		<td><%= text_field :"#{prefix}_address", :address1 %></td>
	</tr>

  <%- if @use_address2 -%>
	<tr>
    <th><%= t('profile.headings.address2') %></th>
		<td><%= text_field :"#{prefix}_address", :address2 %></td>
	</tr>
  <%- end -%>
	<tr>
    <th><%= t('profile.headings.city') %></th>
		<td><%= text_field :"#{prefix}_address", :city %></td>
	</tr>
	<tr>
    <th><%= t('profile.headings.country') %></th>
		<td>
			<%= select :"#{prefix}_address", :country, countries, :prompt => true %>
      <%= observe_field(:"#{prefix}_address_country", {
        :url => (address_type == :current ? set_current_address_states_people_url : set_permanent_address_states_people_url),
        :with => "#{prefix}_address_country",
        :before => "$('##{spinner}').show()"})
      %>
    </td>
  </tr>
	<tr>
		<th><%= t('profile.headings.state') %></th>
		<%= render :partial => "people/#{long_prefix}_address_state_dropdown",
           :locals => { :states => states.collect{ |s| t("provinces.#{s.last.downcase}") } || [] }
		%>
	</tr>
  <tr>
    <th><%= t('profile.headings.zip') %></th>
    <td><%= text_field :"#{prefix}_address", :zip %></td>
  </tr>

<%- if address_type == :current -%>
<%- dorm_selection = dorms.empty? ? [] : dorms.collect {|d| d.name }.insert(0, '') -%>
<tr>
  <th><%= t('profile.headings.dorm') %></th>
  <td><%= select :"#{prefix}_address", :dorm, dorm_selection %></td>
</tr>

<tr>
  <th><%= t('profile.headings.room') %></th>
  <td><%= text_field :"#{prefix}_address", :room %></td>
</tr>
<tr>
  <th><%= t('profile.headings.valid_from') %></th>
  <td class="date">
    <%=
    start_year = Date.today.year - 5
    end_year = start_year + 5
    date_select :"#{prefix}_address", :start_date, {
      :include_blank => true,
      :start_year => start_year,
      :end_year => end_year,
      :ifFormat => (I18n.t 'date.formats.default')};
    %>
  </td>
</tr>
<tr>
  <th><%= t('profile.headings.valid_until') %></th>
  <td class="date">
    <%=
    date_select :"#{prefix}_address", :end_date, {
      :include_blank => true,
      :start_year => start_year,
      :end_year => end_year,
      :ifFormat => (I18n.t 'date.formats.default')};
    %>
  </td>
</tr>
<%- end -%>
</table>
