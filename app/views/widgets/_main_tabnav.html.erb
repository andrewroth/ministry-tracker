<%  
# this partial renders a tabnav, you can call it in your views with:
#   <%= tabnav :main % > (just the tabnav) 
# or, if you want a boxed tabnav:
#   <% tabnav :main do % >
#     your html here
#   <% end % >
# (remove the space between % and >, we don't want to mess up your brand new tabnav :-))
#
# you can pass render_tabnav a few options:
#   :generate_css => true|false #=> generates a default inline css for the tabnav, defaults to false
#   :html => aHash #=> sets html options for the tabnav's div (es :html => {:class=> 'myCssClass', :id=>'myCssId'}) 
#     
return if @restrict_all_links

render_tabnav :main, 
              :html => {:class => 'tablist', :id => 'tablist' } do 

  # help tab not used in current layout
  # 
  #link = I18n.t :help_link, :default => ''
  #if link.present?
    #add_tab do |t|
      #t.named "<div id='helpTab'>HELP</div>"
      #t.titled "Bug and feature forms, user manual and help forum"
      #t.links_to link
      #t.new_window true
    #end
  #end


  if authorized?(:index, :stats)
    add_tab do |t|
      t.named "<div id='insightsTab' class='tab'>INSIGHTS</div>"
      t.titled "Measuring the movement"
      t.links_to :controller => 'stats'
      t.highlights_on :controller => "stats"
      t.highlights_on :controller => "weekly_reports"
      t.highlights_on :controller => "semester_reports"
    end
  end


  if authorized?(:new, :groups)
    add_tab do |t|
      t.named "<div id='groupsTab' class='tab'>GROUPS</div>"
      t.titled 'Groups for ' + @ministry.try(:name).to_s
      t.links_to :controller => "groups"
      t.highlights_on :controller => "groups", :action => "index"
    end if session[:ministry_id]
  end
  
  # @groups = @my.groups.collect {|group| group}
  # add_tab do |t|
  #   if @groups.size == 1
  #     if @groups.first.group_type
  #       t.named  "My #{@groups.first.group_type.group_type}"
  #     else
  #       t.named 'My Group'
  #     end
  #     t.links_to group_path(@groups.first)
  #   else
  #     t.named  'My Groups'
  #     t.links_to groups_path
  #   end
  #   t.highlights_on :controller => "groups"
  #   t.titled 'Where you should be right now'
  # end if @groups.size > 0
 
  if authorized?(:show, :campus_discipleship)
    add_tab do |t|
      t.named "<div id='campusDiscTab' class='tab'>DISCIPLESHIP</div>"
      t.titled 'Campus discipleship view for ' + @ministry.try(:name).to_s
      t.links_to :controller => "campus_discipleship", :action => "show"
      t.highlights_on :controller => "campus_discipleship", :action => "show"
    end if session[:ministry_id]
  end
   
  add_tab do |t|
   t.named "<div id='profileTab' class='tab'>#{I18n.t('layout.left_bar.profile.named')}</div>"
   t.titled t('layout.left_bar.profile.titled')
   t.links_to person_path(@me)
   t.highlights_on :controller => "people", :action => "show", :id => @me.id
   t.highlights_on :controller => "people", :action => "discipleship", :id => @me.id
   t.highlights_on :controller => "timetables", :id => (@my.timetable || Timetable.create(:person_id => @me.id)).id
  end 

  # remove directory tab - directory now accessed via Advanced Search link
  #if authorized?(:directory, :people)
    #add_tab do |t|
      #t.named 'Directory'
      #t.titled 'Directory for ' + @ministry.name
      #t.links_to directory_people_path
      #t.highlights_on :controller => "people", :action => "directory"
    #end if session[:ministry_id]
  #end
  
  add_tab do |t|
   t.named "<div id='dashboardTab' class='tab'>#{I18n.t('layout.left_bar.dashboard.named')}</div>"
   t.titled I18n.t('layout.left_bar.dashboard.titled')
   t.links_to :controller => 'dashboard'
  end 
  
  
  #  
  # you can use restful routes with:
  #
  #add_tab do |t|
  #  t.named 'Users'
  #  t.links_to hash_for_users_path
  #end
  #
  #add_tab do |t|
  #  t.named 'Customers'
  #  t.links_to :controller => 'customers'
  #end
  #  
  # # A tab can be initialized with a Hash like this:
  # 
  # add_tab :name => 'welcome', :link => {:controller=>'welcome'}
  #
  # # You can have a dynamic name or link 
  # # (this partial is evaluated in the page context, so it sees every helper or instance variable)
  #  
  # add_tab do |t|
  #   t.named "#{current_user} details"
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
  #
  # # You can have an image inside 
  #
  # add_tab do |t|
  #   t.named image_tag('test')
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
end 
%>
